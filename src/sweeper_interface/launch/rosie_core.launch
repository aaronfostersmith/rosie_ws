<launch>

  <node pkg="rosserial_python" type="serial_node.py" name="turret_node">
    <param name="port" value="/dev/ttyUSB0"/>
    <param name="baud" value="57600"/>
    <param name="num_pts" value="64"/>
  </node>

  <node pkg="sweeper_interface" type = "laser_builder" name="laser_builder">
    <param name="num_pts" value="64"/>
  </node>
    
  <node pkg="rosserial_python" type="serial_node.py" name="mega_node">
    <param name="port" value="/dev/ttyACM0"/>
    <param name="baud" value="115200"/>

    <remap from="/sweeper/l_motor_cmd" to="/lwheel/pwr_cmd"/>
    <remap from="/sweeper/r_motor_cmd" to="/rwheel/pwr_cmd"/>
  </node>

  <node pkg="sweeper_interface" type = "wheel_PID_controller" name="lwheel_controller"  output="screen" ns="lwheel">
        <remap from="/lwheel/encoder_ticks" to="/sweeper/lwheel"/>
		<remap from="/lwheel/wheel_cmd_vel" to="/lwheel_cmd_vel"/>

		<param name="Kp" value="700"/>
		<param name="Ki" value="900"/>
		<param name="Kd" value="100"/>

		<param name="min_vel" value="0.025"/>
		<param name="windup_limit" value="125"/>
		<param name="wheel_dia" value="0.08" />
		<param name="ticks_per_rev" value="720" />
		<param name="lpf_f" value="5" />
  </node>
    
  <node pkg="sweeper_interface" type = "wheel_PID_controller" name="rwheel_controller"  output="screen" ns="rwheel">
		<remap from="/rwheel/encoder_ticks" to="/sweeper/rwheel"/>
		<remap from="/rwheel/wheel_cmd_vel" to="/rwheel_cmd_vel"/>

		<param name="Kp" value="700"/>
		<param name="Ki" value="900"/>
		<param name="Kd" value="100"/>

		<param name="min_vel" value="0.025"/>
		<param name="windup_limit" value="125"/>
		<param name="wheel_dia" value="0.08" />
		<param name="ticks_per_rev" value="720" />
		<param name="lpf_f" value="5" />
  </node>
    
  <node pkg="sweeper_interface" type = "twist_to_vel" name="twist_to_vel"  output="screen">
      <param name="base_width" value="0.130"/>
  </node>

  <node pkg="sweeper_interface" type = "imu_builder" name="imu_builder">
  </node>

  <node pkg="sweeper_interface" type = "pose_builder_v2" name="pose_builder">
    <remap from="/lwheel_ticks" to="/sweeper/lwheel"/>
    <remap from="/rwheel_ticks" to="/sweeper/rwheel"/>

    <param name="base_width" value="0.2" />
    <param name="wheel_diameter" value="0.08" />
	<param name="ticks_per_rev" value="720" />
  </node>

  <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_madgwick" output="screen" respawn="false" >
    <param name="world_frame" value="enu" />
    <param name="fixed_frame" value="odom" />
    <param name="use_mag" value="false" />
    <param name="publish_tf" value="false" /> 
  </node>

    
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true">
    
      <param name="frequency" value="10"/>
      <param name="sensor_timeout" value="0.5"/>
      <param name="two_d_mode" value="true"/>

      <param name="imu0" value="/imu/data"/>  
      <param name="imu0_differential" value="true" />

      <param name="pose0" value="/odom/encPose"/>


	  
      <param name="map_frame" value="map"/>
      <param name="odom_frame" value="odom"/>
      <param name="base_link_frame" value="base_link"/>
      <param name="world_frame" value="odom"/>

	<rosparam param="pose0_config">[true, true, false, 
                                    false, false, true, 
                                    false, false, false, 
                                    false, false, false,
                                    false, false, false]</rosparam>

        
	<rosparam param="imu0_config">[false, false, false, 
                                   false, false, true, 
                                   false, false, false, 
                                   false, false, true,
                                   false, false, false]</rosparam>

      <param name="print_diagnostics" value="true"/>


  </node>


    
 <!-- convert joint states to TF transforms for rviz, etc -->
        <param name="robot_description" command="$(find xacro)/xacro.py '$(find rosie_description)/urdf/rosie.xacro'" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
	respawn="false" output="screen">
    <remap from="/joint_states" to="/rosie/joint_states" />
  </node>
  
    
</launch>
